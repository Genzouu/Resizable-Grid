.app {
   width: 100vw;
   height: 100vh;
   background-color: #1b1b1b;
   display: flex;
   padding: 2rem;
   overflow: scroll;
   overflow-x: hidden;
   scrollbar-width: none;
   &::-webkit-scrollbar {
      display: none;
   }

   .fields-container {
      width: 100%;
      height: 100%;
      display: grid;
      gap: 1rem 1rem;
      grid-auto-rows: calc((100% - 7rem) / 8); // set up media queries for smaller heights. e.g if max-height is 800 then divide by 6 instead of 8
      grid-template-columns: repeat(8, 1fr);

      @media screen and (max-width: 1400px) {
         grid-template-columns: repeat(6, 1fr);
      }

      @media screen and (max-width: 1200px) {
         grid-template-columns: repeat(4, 1fr);
      }

      @media screen and (max-width: 880px) {
         grid-template-columns: repeat(2, 1fr);
      }

      @media screen and (max-width: 480px) {
         grid-template-columns: 1fr;
      }
   }

   // should only be visible when the user is resizing
   .grid-lines-overlay {
      width: calc(100% - 4rem);
      height: calc(100% - 4rem);
      position: absolute;
      left: 2rem;
      top: 2rem;
      pointer-events: none;
      display: none;

      --line-width: 5px;
      $line-colour: rgba(75, 75, 75, 0.5);
      background-image: linear-gradient($line-colour 0 var(--line-width), transparent 1px),
         linear-gradient(90deg, $line-colour 0 var(--line-width), transparent 1px);
      background-size: calc(((100% - 7rem) / 8) + 10px) calc(((100% - 7rem) / 8) + 10px);
      background-position: calc(var(--line-width) * -1.5) calc(var(--line-width) * -1.5);
   }

   .add-field {
      width: 8rem;
      height: 8rem;
      border-radius: 2rem;
      position: absolute;
      right: 5rem;
      bottom: 5rem;
      border: 4px solid #1b1b1b;
      color: white;
      background-color: black;
      padding: 2rem;
      cursor: pointer;
      transition: background-color 100ms ease-in-out;
      filter: var(--element-drop-shadow);

      &:hover {
         background-color: var(--accent-colour);
      }
   }
}
